#!/bin/sh

prefix=@prefix@
exec_prefix=@exec_prefix@
PATH=@sbindir@:$PATH
export PATH

PROTO=sockets
DBDIR=/tmp/$USER
DBSIZE=$((256 * 1024 * 1024))
LOG_DIR=$HOME
IFACES=default
CHFSD=chfsd

program=$(basename $0)

err() {
	[ "X$*" = X ] || echo >&2 $*
	exit 1
}

usage() {
	[ "X$*" = X ] || echo >&2 $*
	echo >&2 "usage: $program [-c db_dir] [-s db_size] [-p proto] [-I interfaces] [-L log_dir]"
	echo >&2 "		[-h hostfile] [-O options] start | stop | status | kill"
	exit 1
}

while [ $# -gt 0 ]; do
	case $1 in
	    start|stop|status|kill) mode=$1 ;;
	    -h) shift; HOSTFILE=$1 ;;
	    -c) shift; DBDIR=$1 ;;
	    -O) shift; OPTIONS="$1" ;;
	    -p) shift; PROTO=$1 ;;
	    -s) shift; DBSIZE=$1 ;;
	    -I) shift; IFACES="$1" ;;
	    -L) shift; LOG_DIR=$1 ;;
	    -*) echo "unknown option: $1"
		usage ;;
	    *) usage ;;
	esac
	shift
done

[ "X$mode" = X ] && usage
[ "X$HOSTFILE" != X -a ! -f $HOSTFILE ] && usage $HOSTFILE: no such file
[ "X$IFACES" = X ] && usage
[ -d "$LOG_DIR" ] || mkdir -p "$LOG_DIR"
[ -d "$LOG_DIR" ] || err $LOG_DIR: no such directory

PKILL_FLAG=
[ "$mode" = kill ] && PKILL_FLAG=-9

CHFS_OPTIONS="-p $PROTO -s $DBSIZE $OPTIONS"
SERVER_INFO_FILE=/tmp/server-info-file-$USER
MYHOSTNAMES="$(hostname) $(hostname -f) $(hostname -A) $(hostname -I)"
case $mode in
start)
rm -f $SERVER_INFO_FILE
SOPT="-S $SERVER_INFO_FILE"
for device in $IFACES; do
	[ $device = default ] || HOPT="-h $device"
	COPT="-c $DBDIR/$device"
	LOPT="-l $LOG_DIR/$(hostname)-$device"
	if [ X"$SERVER" = X ]; then
		$CHFSD $CHFS_OPTIONS $COPT $LOPT $HOPT $SOPT
	else
		$CHFSD $CHFS_OPTIONS $COPT $LOPT $HOPT $SOPT "$SERVER"
	fi

	if [ X"$SOPT" != X ]; then
		timeout=10
		while [ ! -s $SERVER_INFO_FILE -a $timeout -gt 0 ]; do sleep 1; timeout=$((timeout - 1)); done
		[ $timeout -eq 0 ] && err $CHFSD: timeout

		SERVER=`cat $SERVER_INFO_FILE`
		[ X"$SERVER" = X ] && err $CHFSD: no server info
		SOPT=
	fi
	HOPT=
done
echo "CHFS_SERVER=\"$SERVER\"; export CHFS_SERVER"
;;
stop|kill)
pkill $PKILL_FLAG $CHFSD
rm -f $SERVER_INFO_FILE
;;
status)
if [ -s $SERVER_INFO_FILE ]; then
	chlist `cat $SERVER_INFO_FILE`
else
	echo >&2 no server info file
fi
echo $(hostname -f)
ps -ef | grep $CHFSD | egrep -v grep
;;
esac

[ "X$HOSTFILE" = X ] && exit 0

MAX_JOBS=1
p=0
for host in `sed -e 's/#.*//' -e '/^[ 	]*$/d' $HOSTFILE | awk '{ print $1 }'`
do
	echo $MYHOSTNAMES | grep $host > /dev/null && continue
	case $mode in
	start)
	for device in $IFACES; do
		[ $device = default ] || HOPT="-h $device"
		COPT="-c $DBDIR/$device"
		LOPT="-l $LOG_DIR/$host-$device"
		ssh $host LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" PATH=\"$PATH\" $CHFSD $CHFS_OPTIONS $COPT $LOPT $HOPT \"$SERVER\" &
		HOPT=
		p=$((p + 1))
		if [ $p -ge $MAX_JOBS ]; then
			p=0
			wait
		fi
	done
	;;
	stop|kill)
	ssh $host pkill $PKILL_FLAG $CHFSD &
	;;
	status)
	echo $host
	ssh $host "ps -ef | grep $CHFSD | egrep -v grep"
	;;
	esac
	p=$((p + 1))
	if [ $p -ge $MAX_JOBS ]; then
		p=0
		wait
	fi
done
wait

exit 0
